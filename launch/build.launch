<launch>
    <!-- load params -->
    <rosparam file="$(find dataset_builder)/params/dicts.yaml" command="load"/>

    <!-- user input args S0508202732 Fix Setting Thing-->
    <arg name="robofleet" default='true'/>
    <arg name="outdir" default="/project/ws_dev/src/hri_cacti_xr/data/005_data"/>
    <!-- <arg name="outdir" default="/project/ws_dev/src/hri_cacti_xr/dataset_builder/test"/> -->
    <arg name="classname" default="Advance"/>
    <arg name="bagdata" default='true'/>
    <arg name="image_fps" default="15"/>

    <!-- configure topics -->
    <arg name="start_topic_name"  default="/hololens/natural_input_capture/start"/>
    <arg name="stop_topic_name"   default="/hololens/natural_input_capture/stop"/>
    <arg name="mono_ll_topic"     default="/hololens/LEFT_LEFT/image"/>
    <arg name="mono_lf_topic"     default="/hololens/LEFT_FRONT/image"/>
    <arg name="mono_rf_topic"     default="/hololens/RIGHT_FRONT/image"/>
    <arg name="mono_rr_topic"     default="/hololens/RIGHT_RIGHT/image"/>
    <arg name="mic_topic"         default="/hololens/microphone/data"/>

    <!-- set global params -->
    <param name="classname"         value="$(arg classname)"/>
    <param name="classname_id"      value=""/> <!-- set dynamically in config_params.py-->
    <param name="timestamp"         value=""/> <!-- set dynamically in config_params.py--> 
    <param name="base_outdir"       value="$(arg outdir)"/>
    <param name="stop_topic_name"   value="$(arg stop_topic_name)"/>
    <param name="use_sim_time"      value="false" />
    
    <!-- robofleet client -->
    <group if="$(arg robofleet)" ns="robofleet"> 
        <arg name="rfconfig" default="$(env HRI_CACTI_XR_PATH)/robofleet/hl-ss-config.yaml"/>
	    <node
	    	name    = "robofleet_client"
	    	pkg     = "robofleet_client"
	    	type    = "client"
	    	output  = "screen"
	    	args	= "$(arg rfconfig)"
	    />
    </group>

    <!-- config params node -->
    <node 
        ns="config_params_node" 
        name = "config_params" 
        pkg = "dataset_builder" 
        type = "config_params.py" 
        output = "screen"
    />
    
    <!-- mono left left camera stream -->
    <group ns="mono_ll">
        <include file="$(find image_writer)/launch/save_raw_image_stream.launch" />
        <param name ="filepath" value="$(arg outdir)/devices/mono_ll/raw/$(arg classname)/"/>
        <param name ="filename" value=""/>
        <param name ="topicname_image" value="$(arg mono_ll_topic)"/>
        <param name ="fps" value="$(arg image_fps)"/>
        <param name ="use_param_server" value='true'/>
        <param name ="save_multi_stream_in_sequence" value='true'/>
        <param name ="filetype" value=".avi"/>
    </group>

    <!-- mono left front camera stream -->
    <group ns="mono_lf">
        <include file="$(find image_writer)/launch/save_raw_image_stream.launch" />
        <param name ="filepath" value="$(arg outdir)/devices/mono_lf/raw/$(arg classname)/"/>
        <param name ="filename" value=""/>
        <param name ="topicname_image" value="$(arg mono_lf_topic)"/>
        <param name ="fps" value="$(arg image_fps)"/>
        <param name ="use_param_server" value='true'/>
        <param name ="save_multi_stream_in_sequence" value='true'/>
        <param name ="filetype" value=".avi"/>
    </group>

    <!-- mono right front camera stream -->
    <group ns="mono_rf">
        <include file="$(find image_writer)/launch/save_raw_image_stream.launch" />
        <param name ="filepath" value="$(arg outdir)/devices/mono_rf/raw/$(arg classname)/"/>
        <param name ="filename" value=""/>
        <param name ="topicname_image" value="$(arg mono_rf_topic)"/>
        <param name ="fps" value="$(arg image_fps)"/>
        <param name ="use_param_server" value='true'/>
        <param name ="save_multi_stream_in_sequence" value='true'/>
        <param name ="filetype" value=".avi"/>
    </group>
   
    <!-- mono right right camera stream -->
    <group ns="mono_rr">
        <include file="$(find image_writer)/launch/save_raw_image_stream.launch" />
        <param name ="filepath" value="$(arg outdir)/devices/mono_rr/raw/$(arg classname)/"/>
        <param name ="filename" value=""/>
        <param name ="topicname_image" value="$(arg mono_rr_topic)"/>
        <param name ="fps" value="$(arg image_fps)"/>
        <param name ="use_param_server" value='true'/>
        <param name ="save_multi_stream_in_sequence" value='true'/>
        <param name ="filetype" value=".avi"/>
    </group>

    <!-- microphone stream -->
    <group ns="mic">
        <rosparam file="$(find audio_writer)/params/params.yaml" command="load"/>
        <param name ="output_directory_" value="$(arg outdir)/devices/mic/raw/$(arg classname)/"/>
        <param name ="filepath" value="$(arg outdir)/devices/mic/raw/$(arg classname)/"/>
        <param name ="postfix_" value=""/>
        <param name ="topic_name_" value="$(arg mic_topic)"/>
        <param name ="use_param_server" value='true'/>
        <param name ="downsample_" value='false'/>
        <param name ="queue_size_" value='100'/>
        <param name="start_recording_topic_" value="$(arg start_topic_name)"/>
        <param name="stop_recording_topic_" value="$(arg stop_topic_name)"/>
        <param name ="filetype" value=".wav"/>
        <node
	    	name    = "save_raw_audio_stream"
	    	pkg     = "audio_writer"
	    	type    = "save_raw_audio_stream"
	    	output  = "screen"
	    /> 
    </group>

    <!-- bagger -->
    <group if="$(arg bagdata)" ns="bag_util">
        <rosparam file="$(find bag_utility)/params/params.yaml" />
        <param name="output_directory" value="$(arg outdir)/bags/" />
        <param name="postfix" value="" />
        <param name="use_param_server" value='true'/>
        <param name="start_capture_topicname_" value="$(arg start_topic_name)"/>
        <param name="stop_capture_topicname_" value="$(arg stop_topic_name)"/>
        <param name="audio_data_topicname_" value="$(arg mic_topic)"/>
        <node
            name    ="save_bags"
            pkg     ="bag_utility"
            type    ="save_bags"
            output  ="screen"
        />
    </group>

</launch>